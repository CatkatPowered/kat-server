plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'maven-publish'
    id 'java'
}

sourceCompatibility = 17
targetCompatibility = 17

group 'com.catkatpowered.katserver'
version '1.0.0-dev'

repositories {
    mavenCentral()
    maven { url = 'https://repository.hanbings.io/snapshots' }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j
    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.1'

    // https://mvnrepository.com/artifact/io.javalin/javalin
    implementation 'io.javalin:javalin:4.3.0'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation 'com.google.code.gson:gson:2.8.9'
    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation 'com.google.guava:guava:31.0.1-jre'

    // https://mvnrepository.com/artifact/org.yaml/snakeyaml
    implementation 'org.yaml:snakeyaml:1.30'

    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'
    // https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver
    implementation 'org.mongodb:mongo-java-driver:3.12.10'
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    implementation 'mysql:mysql-connector-java:8.0.26'
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    implementation 'mysql:mysql-connector-java:5.1.49'
    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation 'org.postgresql:postgresql:42.3.1'

}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier.convention('sources')
    archiveClassifier.set('sources')
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier.convention('javadocs')
    archiveClassifier.set('javadocs')
}

javadoc {
    options.addBooleanOption('html5', true)
    options.encoding('utf-8')
}

shadowJar {
    manifest {
        attributes(
                'Main-Class': 'com.catkatpowered.katserver.KatServer',
                "Multi-Release": true
        )
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

test {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            url = uri(project.findProperty("repository_root_url") ?: System.getenv("REPOSITORY_ROOT_URL")
                    + (project.version.toString().endsWith('dev') ? 'snapshots' : 'releases'))
            credentials {
                username = project.findProperty("repository_user") ?: System.getenv("REPOSITORY_USER")
                password = project.findProperty("repository_token") ?: System.getenv("REPOSITORY_TOKEN")
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifact(jar)
            artifact(sourcesJar)
            artifact(javadocJar)
        }
    }
}